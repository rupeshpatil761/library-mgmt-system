plugins {
	id 'org.springframework.boot'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'groovy'
	id 'org.springframework.cloud.contract'
}

group = 'com.rupesh.library'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	mavenLocal()
	maven { url 'https://repo.spring.io/snapshot' }
	maven { url 'https://repo.spring.io/milestone' }
	maven { url "https://repo.spring.io/release" }
}

ext {
	set('springCloudVersion', "${BOM_VERSION}")
}

println "Boot Version [${bootVersion}], Cloud version [${springCloudVersion}], Contract version [${verifierVersion}]"

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'

	//testing
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.boot:spring-boot-test'
	testImplementation 'junit:junit'

	//Lombok dependencies
	compileOnly 'org.projectlombok:lombok:1.18.12'
	annotationProcessor 'org.projectlombok:lombok:1.18.12'

	//swagger config dependencies
	implementation 'io.springfox:springfox-swagger2:2.9.2'
	implementation 'io.springfox:springfox-swagger-ui:2.9.2'

	//postgres
	implementation 'org.postgresql:postgresql'

	//flyway
	implementation 'org.flywaydb:flyway-core'

	//spring-cloud
	//If you are using 2.4.0, you need to add below dependency
	implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap'
	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

	//circuitbreaker-resilience4j
	implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-resilience4j'

	//AWS dynamo db
	implementation 'software.amazon.awssdk:dynamodb:2.16.87'
	implementation 'com.github.derjust:spring-data-dynamodb:5.1.0'

	testImplementation 'org.springframework.cloud:spring-cloud-starter-contract-verifier'
	testImplementation("org.springframework.cloud:spring-cloud-contract-wiremock")

	//for compatibility
	//testImplementation('org.junit.jupiter:junit-jupiter-engine')

}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
		mavenBom "org.springframework.cloud:spring-cloud-contract-dependencies:${verifierVersion}"
	}
}

contracts {
	baseClassForTests = 'com.book.service.cloud.contract.BaseContractTest'
}

test {
	testLogging {
		exceptionFormat = 'full'
	}
	afterSuite { desc, result ->
		if (!desc.parent) {
			println "Results: (${result.testCount} tests, ${result.successfulTestCount} successes, ${result.failedTestCount} failures, ${result.skippedTestCount} skipped)"
			boolean skipTests = Boolean.parseBoolean(project.findProperty('SKIP_TESTS') ?: "false")
			if (result.testCount == 0 && !skipTests) {
				throw new IllegalStateException("No tests were found. Failing the build")
			}
		}
	}
}